{"ast":null,"code":"import { applyMiddleware, compose, legacy_createStore as createStore } from \"redux\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nvar configureStore = function configureStore() {\n  var enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["applyMiddleware","compose","legacy_createStore","createStore","createWrapper","composeWithDevTools","reducer","configureStore","enhancer","store","wrapper","debug"],"sources":["C:/node_bird new/node_bird/prepare/front/store/configureStore.js"],"sourcesContent":["import {\r\n  applyMiddleware,\r\n  compose,\r\n  legacy_createStore as createStore,\r\n} from \"redux\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = () => {\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware([]))\r\n      : composeWithDevTools(applyMiddleware([]));\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,OAAO,EACPC,kBAAkB,IAAIC,WAAW,QAC5B,OAAO;AACd,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,OAAO,MAAM,aAAa;AAEjC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAMC,QAAQ,GACZ,QACIP,OAAO,CAACD,eAAe,CAAC,EAAE,CAAC,CAAC,GAC5BK,mBAAmB,CAACL,eAAe,CAAC,EAAE,CAAC,CAAC;EAC9C,IAAMS,KAAK,GAAGN,WAAW,CAACG,OAAO,EAAEE,QAAQ,CAAC;EAC5C,OAAOC,KAAK;AACd,CAAC;AACD,IAAMC,OAAO,GAAGN,aAAa,CAACG,cAAc,EAAE;EAC5CI,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}