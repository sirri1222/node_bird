{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nconst initialState = {\n  post: {\n    mainPosts: [{\n      id: 1,\n      User: {\n        id: 1,\n        nickname: \"sirri\"\n      },\n      content: \"첫번째 개시글 #해시태그 #해시태그2\",\n      Images: [{\n        src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n      }, {\n        src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n      }, {\n        src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n      }],\n      Comments: [{\n        User: {\n          nickname: \"nero\"\n        },\n        content: \"우와 개정판이 나왔군요~\"\n      }, {\n        User: {\n          nickname: \"hero\"\n        },\n        content: \"얼른 사고싶어요~\"\n      }]\n    }],\n    imagePaths: [],\n    postAdded: false\n  }\n};\nconst ADD_POST = \"ADD_POST\";\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: {\n    id: 1,\n    nickname: \"sirri\"\n  },\n  Images: [],\n  Comments: []\n};\nexport const addPost = {\n  type: ADD_POST\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPost: [dummyPost, ...state.mainPost]\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","post","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","postAdded","ADD_POST","dummyPost","addPost","type","reducer","state","action","_objectSpread","mainPost"],"sources":["C:/node_bird new/node_bird/prepare/front/reducers/post.js"],"sourcesContent":["const initialState = {\r\n  post: {\r\n    mainPosts: [\r\n      {\r\n        id: 1,\r\n        User: { id: 1, nickname: \"sirri\" },\r\n        content: \"첫번째 개시글 #해시태그 #해시태그2\",\r\n        Images: [\r\n          {\r\n            src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\r\n          },\r\n          {\r\n            src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\r\n          },\r\n          {\r\n            src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\r\n          },\r\n        ],\r\n        Comments: [\r\n          {\r\n            User: {\r\n              nickname: \"nero\",\r\n            },\r\n            content: \"우와 개정판이 나왔군요~\",\r\n          },\r\n          {\r\n            User: {\r\n              nickname: \"hero\",\r\n            },\r\n            content: \"얼른 사고싶어요~\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n\r\n    imagePaths: [],\r\n    postAdded: false,\r\n  },\r\n};\r\nconst ADD_POST = \"ADD_POST\";\r\n\r\nconst dummyPost = {\r\n  id: 2,\r\n  content: \"더미데이터입니다.\",\r\n  User: {\r\n    id: 1,\r\n    nickname: \"sirri\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n};\r\n\r\nexport const addPost = {\r\n  type: ADD_POST,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        mainPost: [dummyPost, ...state.mainPost],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":";;;;;AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE;IACJC,SAAS,EAAE,CACT;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;QAAED,EAAE,EAAE,CAAC;QAAEE,QAAQ,EAAE;MAAQ,CAAC;MAClCC,OAAO,EAAE,sBAAsB;MAC/BC,MAAM,EAAE,CACN;QACEC,GAAG,EAAE;MACP,CAAC,EACD;QACEA,GAAG,EAAE;MACP,CAAC,EACD;QACEA,GAAG,EAAE;MACP,CAAC,CACF;MACDC,QAAQ,EAAE,CACR;QACEL,IAAI,EAAE;UACJC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;MACX,CAAC,EACD;QACEF,IAAI,EAAE;UACJC,QAAQ,EAAE;QACZ,CAAC;QACDC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC,CACF;IAEDI,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE;EACb;AACF,CAAC;AACD,MAAMC,QAAQ,GAAG,UAAU;AAE3B,MAAMC,SAAS,GAAG;EAChBV,EAAE,EAAE,CAAC;EACLG,OAAO,EAAE,WAAW;EACpBF,IAAI,EAAE;IACJD,EAAE,EAAE,CAAC;IACLE,QAAQ,EAAE;EACZ,CAAC;EACDE,MAAM,EAAE,EAAE;EACVE,QAAQ,EAAE;AACZ,CAAC;AAED,OAAO,MAAMK,OAAO,GAAG;EACrBC,IAAI,EAAEH;AACR,CAAC;AAED,MAAMI,OAAO,GAAGA,CAACC,KAAK,GAAGjB,YAAY,EAAEkB,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACH,IAAI;IACjB,KAAKH,QAAQ;MACX,OAAAO,aAAA,CAAAA,aAAA,KACKF,KAAK;QACRG,QAAQ,EAAE,CAACP,SAAS,EAAE,GAAGI,KAAK,CAACG,QAAQ;MAAC;IAE5C;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}