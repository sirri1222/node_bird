{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n// 리덕스 ssr을 위한 HYDRATE가있음.\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport user from \"./user\";\nimport post from \"./post\";\nimport { combineReducers } from \"redux\";\n\n// async action creator(비동기 엑션 크리에이터)\n// action creator\n\n// (이전상태, 액션) => 다음상태\nvar rootReducer = combineReducers({\n  index: function index() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n    switch (action.type) {\n      case HYDRATE:\n        console.log(\"HYDRATE\", action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n    }\n  },\n  user: user,\n  post: post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","user","post","combineReducers","rootReducer","index","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload"],"sources":["C:/node_bird new/node_bird/prepare/front/reducers/index.js"],"sourcesContent":["// 리덕스 ssr을 위한 HYDRATE가있음.\r\n\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n// async action creator(비동기 엑션 크리에이터)\r\n// action creator\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = combineReducers({\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        console.log(\"HYDRATE\", action);\r\n        return { ...state, ...action.payload };\r\n    }\r\n  },\r\n\r\n  user,\r\n  post,\r\n});\r\nexport default rootReducer;\r\n"],"mappings":";;;AAAA;;AAEA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,eAAe,QAAQ,OAAO;;AAEvC;AACA;;AAEA;AACA,IAAMC,WAAW,GAAGD,eAAe,CAAC;EAClCE,KAAK,EAAE,SAAAA,MAAA,EAAwB;IAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IACxB,QAAQC,MAAM,CAACC,IAAI;MACjB,KAAKX,OAAO;QACVY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,MAAM,CAAC;QAC9B,OAAAI,aAAA,CAAAA,aAAA,KAAYR,KAAK,GAAKI,MAAM,CAACK,OAAO;IACxC;EACF,CAAC;EAEDd,IAAI,EAAJA,IAAI;EACJC,IAAI,EAAJA;AACF,CAAC,CAAC;AACF,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}