{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\node_bird new\\\\node_bird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined } from \"@ant-design/icons\";\nimport PropTypes from 'prop-types';\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport { useCallback, useState } from \"react\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  // 옵셔널 체이닝 연산자\n  var id = useSelector(function (state) {\n    var _state$user, _state$user$me;\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : (_state$user$me = _state$user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLiked = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return;\n  __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      key: \"heartred\",\n      twoToneColor: eb2f96,\n      onClick: onToggleLiked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"message\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(EilipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Buttons, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }\n  }), __jsx(List, {\n    header: \" \".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 3\n        }\n      }, \" \", __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 8\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  })));\n};\n_s(PostCard, \"HdGEwiNZ7hsyZBWC0VXAlco3yww=\", true);\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object\n  })\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Avatar","Button","Card","Comment","List","Popover","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","PropTypes","ButtonGroup","useCallback","useState","PostCard","_ref","_s","post","id","useSelector","state","_state$user","_state$user$me","user","me","_useState","liked","setLiked","_useState2","commentFormOpened","setCommentFormOpened","onToggleLiked","prev","onToggleComment","__jsx","style","marginBottom","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","cover","Images","PostImages","images","Image","actions","key","twoToneColor","eb2f96","onClick","content","Group","User","React","Fragment","type","EilipsisOutlined","Content","Buttons","CommentForm","header","concat","Comments","length","itemLayout","dataSource","renderItem","item","author","nickname","avatar","_c","shape","number","object","$RefreshReg$"],"sources":["C:/node_bird new/node_bird/prepare/front/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartTwoTone,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  \r\n} from \"@ant-design/icons\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ButtonGroup from \"antd/lib/button/button-group\";\r\nimport { useCallback, useState } from \"react\";\r\nconst PostCard = ({post}) => {\r\n  // 옵셔널 체이닝 연산자\r\n  const id = useSelector((state) => state.user?.me?.id);\r\nconst [liked, setLiked] =useState(false)\r\nconst [commentFormOpened,setCommentFormOpened] = useState(false)\r\nconst onToggleLiked = useCallback(()=>{\r\n  setLiked((prev)=> !prev);\r\n},[])\r\nconst onToggleComment = useCallback(()=>{\r\n  setCommentFormOpened((prev)=> !prev)\r\n\r\n},[])\r\n  return;\r\n  <div style={{marginBottom: 20}}>\r\n    <Card\r\n      cover={post.Images[0] && <PostImages images={post.Image} />}\r\n      actions={[\r\n        <RetweetOutlined key=\"retweet\" />,\r\n       liked ?\r\n         <HeartTwoTone key=\"heartred\" twoToneColor={eb2f96} onClick={onToggleLiked} />\r\n         :\r\n         <HeartOutlined key=\"heart\" />,\r\n        <MessageOutlined key=\"message\" />,\r\n        <Popover\r\n          key=\"more\"\r\n          content={\r\n            <Button.Group>\r\n              {/* 내아이디가 게시글 작성아이디랑 같으면 수정 가능 */}\r\n              {id && post.User.id === id ? (\r\n                <>\r\n                  <Button>수정</Button>\r\n                  <Button type=\"danger\">삭제</Button>\r\n                </>\r\n              ) : (\r\n                <Button>신고</Button>\r\n              )}\r\n            </Button.Group>\r\n          }\r\n        >\r\n          <EilipsisOutlined />\r\n        </Popover>,\r\n      ]}\r\n    >\r\n      <Image />\r\n\r\n      <Content />\r\n\r\n      <Buttons></Buttons>\r\n    </Card>\r\n\r\n    {commentFormOpened && (\r\n      <div>\r\n     <CommentForm post={post} /> \r\n     <List\r\n     header={\r\n     ` ${post.Comments.length}개의 댓글`}\r\n     itemLayout=\"horizontal\"\r\n     dataSource={post.Comments}\r\nrenderItem={(item)=>(\r\n  <li> <Comment\r\n  author={item.User.nickname}\r\n\r\n  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n  \r\n  content={item.content}>\r\n    </Comment></li>\r\n)}\r\n></List>\r\n    \r\n      </div>\r\n   \r\n     )}\r\n   \r\n  </div>;\r\n};\r\n\r\nPostCard.PropTypes={\r\n  post: PropTypes.shape({\r\n    id:PropTypes.number,\r\n    User:PropTypes.object\r\n  })\r\n}\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}